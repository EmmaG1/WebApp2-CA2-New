{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Nappy\\\\Documents\\\\GitHub\\\\WebApp2-CA2-New\\\\wad2-moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Nappy\\\\Documents\\\\GitHub\\\\WebApp2-CA2-New\\\\wad2-moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nappy\\\\Documents\\\\GitHub\\\\WebApp2-CA2-New\\\\wad2-moviesApp\\\\src\\\\contexts\\\\moviesContext.js\";\nimport React, { useEffect, createContext, useReducer } from \"react\";\nimport { getMovies, getUpcomingMovies, getTopRated, getNowPlaying, getPopularMovies } from \"../api/tmdb-api\";\nexport var MoviesContext = createContext(null);\n\nvar reducer = (state, action) => {\n  switch (action.type) {\n    case \"add-favorite\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          favorite: true\n        }) : m),\n        toprated: state.toprated.map(t => t.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, t), {}, {\n          favorite: true\n        }) : t),\n        nowplaying: state.nowplaying.map(n => n.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, n), {}, {\n          favorite: true\n        }) : n),\n        upcoming: [...state.upcoming],\n        popularmovies: state.popularmovies.map(p => p.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, p), {}, {\n          favorite: true\n        }) : p)\n      };\n\n    case \"add-watchlist\":\n      return {\n        upcoming: state.upcoming.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          watchlist: true\n        }) : m),\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying],\n        popularmovies: [...state.popularmovies],\n        movies: [...state.movies]\n      };\n\n    case \"load\":\n      return {\n        movies: action.payload.movies,\n        upcoming: [...state.upcoming],\n        nowplaying: [...state.nowplaying],\n        toprated: [...state.toprated],\n        popularmovies: [...state.popularmovies]\n      };\n\n    case \"load-upcoming\":\n      return {\n        upcoming: action.payload.movies,\n        movies: [...state.movies],\n        nowplaying: [...state.nowplaying],\n        toprated: [...state.toprated],\n        popularmovies: [...state.popularmovies]\n      };\n\n    case \"load-toprated\":\n      return {\n        toprated: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        nowplaying: [...state.nowplaying],\n        popularmovies: [...state.popularmovies]\n      };\n\n    case \"load-nowplaying\":\n      //\n      return {\n        nowplaying: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        toprated: [...state.toprated],\n        popularmovies: [...state.popularmovies]\n      };\n\n    case \"load-popularmovies\":\n      return {\n        popularmovies: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"add-review\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          review: action.payload.review\n        }) : m),\n        //\n        upcoming: [...state.upcoming],\n        nowplaying: [...state.nowplaying],\n        toprated: [...state.toprated],\n        popularmovies: [...state.popularmovies]\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar MoviesContextProvider = props => {\n  //\n  var _useReducer = useReducer(reducer, {\n    movies: [],\n    upcoming: [],\n    nowplaying: [],\n    toprated: [],\n    popularmovies: []\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var addToFavorites = movieId => {\n    //\n    var index = state.movies.map(m => m.id).indexOf(movieId);\n    dispatch({\n      type: \"add-favorite\",\n      payload: {\n        movie: state.movies[index],\n        nowplaying: state.nowplaying[index],\n        toprated: state.toprated[index],\n        popularmovies: state.popularmovies[index]\n      }\n    });\n  };\n\n  var addToWatchList = movieId => {\n    var index = state.upcoming.map(m => m.id).indexOf(movieId);\n    dispatch({\n      type: \"add-watchlist\",\n      payload: {\n        movie: state.upcoming[index]\n      }\n    });\n  };\n\n  var addReview = (movie, review) => {\n    dispatch({\n      type: \"add-review\",\n      payload: {\n        movie,\n        review\n      }\n    });\n  };\n\n  useEffect(() => {\n    getMovies().then(movies => {\n      dispatch({\n        type: \"load\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getUpcomingMovies().then(movies => {\n      dispatch({\n        type: \"load-upcoming\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //added 11/12\n\n  useEffect(() => {\n    getTopRated().then(movies => {\n      dispatch({\n        type: \"load-toprated\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getNowPlaying().then(movies => {\n      dispatch({\n        type: \"load-nowplaying\",\n        payload: {\n          movies\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    getPopularMovies().then(movies => {\n      dispatch({\n        type: \"load-popularmovies\",\n        payload: {\n          movies\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      upcoming: state.upcoming,\n      addToFavorites: addToFavorites,\n      addToWatchList: addToWatchList,\n      addReview: addReview,\n      //add toprated here?\n      toprated: state.toprated,\n      nowplaying: state.nowplaying,\n      popularmovies: state.popularmovies\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/Nappy/Documents/GitHub/WebApp2-CA2-New/wad2-moviesApp/src/contexts/moviesContext.js"],"names":["React","useEffect","createContext","useReducer","getMovies","getUpcomingMovies","getTopRated","getNowPlaying","getPopularMovies","MoviesContext","reducer","state","action","type","movies","map","m","id","payload","movie","favorite","toprated","t","nowplaying","n","upcoming","popularmovies","p","watchlist","review","MoviesContextProvider","props","dispatch","addToFavorites","movieId","index","indexOf","addToWatchList","addReview","then","children"],"mappings":"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","sourcesContent":["import React, { useEffect, createContext, useReducer } from \"react\";\r\nimport { getMovies, getUpcomingMovies, getTopRated, getNowPlaying, getPopularMovies } from \"../api/tmdb-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add-favorite\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, favorite: true } : m\r\n        ),\r\n       \r\n        toprated: state.toprated.map((t) =>\r\n         t.id === action.payload.movie.id ? { ...t, favorite: true } : t\r\n        ),\r\n\r\n        nowplaying: state.nowplaying.map((n) =>\r\n          n.id === action.payload.movie.id ? { ...n, favorite: true } : n\r\n        ),\r\n      \r\n        upcoming: [...state.upcoming],\r\n\r\n        popularmovies: state.popularmovies.map((p) =>\r\n          p.id === action.payload.movie.id ? { ...p, favorite: true } : p\r\n        ),\r\n\r\n      };\r\n    case \"add-watchlist\":\r\n      return {\r\n        upcoming: state.upcoming.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, watchlist: true} : m\r\n          ),\r\n          \r\n          toprated: [...state.toprated],\r\n          nowplaying: [...state.nowplaying],\r\n          popularmovies: [...state.popularmovies],\r\n          movies: [...state.movies],\r\n      };\r\n    case \"load\": \r\n      return { movies: action.payload.movies, upcoming: [...state.upcoming], nowplaying: [...state.nowplaying], toprated: [...state.toprated],popularmovies: [...state.popularmovies] };\r\n    case \"load-upcoming\": \r\n      return { upcoming: action.payload.movies, movies: [...state.movies],  nowplaying: [...state.nowplaying], toprated: [...state.toprated], popularmovies: [...state.popularmovies] };\r\n\r\n    case \"load-toprated\":\r\n      return{toprated: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies], nowplaying: [...state.nowplaying], popularmovies: [...state.popularmovies] };\r\n\r\n    case \"load-nowplaying\": //\r\n      return{nowplaying: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies], toprated: [...state.toprated], popularmovies: [...state.popularmovies] };\r\n\r\n    case \"load-popularmovies\":\r\n      return{popularmovies: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies], toprated: [...state.toprated],  nowplaying: [...state.nowplaying]};\r\n\r\n    case \"add-review\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id\r\n            ? { ...m, review: action.payload.review }\r\n            : m\r\n        ),\r\n        //\r\n        upcoming: [...state.upcoming], nowplaying: [...state.nowplaying], toprated: [...state.toprated], popularmovies: [...state.popularmovies] \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = (props) => { //\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], upcoming: [], nowplaying: [], toprated: [], popularmovies: []});\r\n\r\n  const addToFavorites = (movieId) => { //\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-favorite\", payload: { movie: state.movies[index], nowplaying: state.nowplaying[index], toprated: state.toprated[index],  popularmovies: state.popularmovies[index] } });\r\n  };\r\n\r\n  const addToWatchList = (movieId) => {\r\n    const index = state.upcoming.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-watchlist\", payload: { movie: state.upcoming[index] } });\r\n  };\r\n\r\n  const addReview = (movie, review) => {\r\n    dispatch({ type: \"add-review\", payload: { movie, review } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies().then((movies) => {\r\n      dispatch({ type: \"load\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMovies().then((movies) => {\r\n      dispatch({ type: \"load-upcoming\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //added 11/12\r\n  useEffect(() => {\r\n    getTopRated().then((movies) => {\r\n      dispatch({ type: \"load-toprated\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getNowPlaying().then((movies) => {\r\n      dispatch({ type: \"load-nowplaying\", payload: { movies } });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPopularMovies().then((movies) => {\r\n      dispatch({ type: \"load-popularmovies\", payload: { movies } });\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        upcoming: state.upcoming,\r\n        addToFavorites: addToFavorites,\r\n        addToWatchList: addToWatchList,\r\n        addReview: addReview,\r\n        //add toprated here?\r\n        toprated: state.toprated,\r\n        nowplaying: state.nowplaying,\r\n        popularmovies: state.popularmovies,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}